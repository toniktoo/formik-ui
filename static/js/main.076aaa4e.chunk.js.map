{"version":3,"sources":["components/form/shema.js","components/form/FieldName.jsx","components/form/FieldPassword.jsx","components/form/FieldAccept.jsx","components/form/FieldAge.jsx","components/form/FieldEmail.jsx","components/form/FieldWebsite.jsx","components/form/FieldSkills.jsx","utils/filtrerValues.js","components/FormAuth.jsx","App.js","index.js","components/form/Form.module.css"],"names":["schemaValidate","yup","shape","name","max","required","password","matches","confirmPassword","when","is","val","length","then","oneOf","email","website","url","age","min","skills","acceptTerms","Text","Typography","FieldName","className","styles","item","type","placeholder","msg","FieldPassword","cx","bind","FieldAccept","component","FieldAge","fieldColumn","style","width","FieldEmail","FieldWebsite","count","FieldArrayComponent","arrayHelpers","form","values","map","objSkill","index","key","fieldRow","field","touched","errors","error","getIn","touch","skiilsWrap","onChange","height","onClick","push","FieldSkills","filtredEmptyFields","filtredSkiils","filter","skill","undefined","filtredEmptySkiils","_","omitBy","k","v","Title","FormAuth","handleSubmit","a","setFieldError","setSubmitting","filtred","axios","post","response","status","alert","data","message","initialValues","validationSchema","onSubmit","formWrap","level","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.076aaa4e.chunk.js","sourcesContent":["import * as yup from 'yup';\r\n\r\nexport const schemaValidate = yup.object().shape({\r\n  name: yup.string().max(50, 'не более 50 символов').required('Заполните имя'),\r\n  password: yup\r\n    .string()\r\n    .required('Введите пароль')\r\n    .matches(\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\r\n      'Пароль от 8 до 40 символов, как минимум одна цифра и одна заглавная буква'\r\n    ),\r\n  confirmPassword: yup.string().when('password', {\r\n    is: (val) => (val && val.length > 0 ? true : false),\r\n    then: yup\r\n      .string()\r\n      .oneOf([yup.ref('password')], 'Пароли не совпадают')\r\n      .required('Повторите пароль'),\r\n  }),\r\n  email: yup.string().email('Не правильный email').required('Введите email'),\r\n  website: yup.string().url('Не правильный url'),\r\n  age: yup\r\n    .number()\r\n    .min(18, 'не менее 18')\r\n    .max(65, 'не более 65')\r\n    .required('Введите age'),\r\n  skills: yup.array(),\r\n  acceptTerms: yup.bool().oneOf([true], 'Нужно принять правила'),\r\n});\r\n","import React from 'react';\nimport { ErrorMessage } from 'formik';\nimport { Typography } from 'antd';\nimport { Input } from 'formik-antd';\nimport styles from './Form.module.css';\n\nconst { Text } = Typography;\n\nconst FieldName = () => (\n  <div className={styles.item}>\n    <Text>Name: </Text>\n    <Input name=\"name\" type=\"text\" placeholder=\"Enter name...\" />\n    <ErrorMessage name=\"name\">\n      {(msg) => <Text type=\"danger\">{msg}</Text>}\n    </ErrorMessage>\n  </div>\n);\n\nexport default FieldName;\n","import React from 'react';\nimport { ErrorMessage } from 'formik';\nimport { Typography } from 'antd';\nimport { Input } from 'formik-antd';\nimport styles from './Form.module.css';\n\nconst { Text } = Typography;\n\nconst FieldPassword = () => (\n  <>\n    <div className={styles.item}>\n      <Text>Password: </Text>\n      <Input\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Enter password...\"\n      />\n      <ErrorMessage name=\"password\">\n        {(msg) => <Text type=\"danger\">{msg}</Text>}\n      </ErrorMessage>\n    </div>\n    <div className={styles.item}>\n      <Text>ConfirmPassword: </Text>\n      <Input\n        name=\"confirmPassword\"\n        type=\"password\"\n        placeholder=\"Enter password...\"\n      />\n      <ErrorMessage name=\"confirmPassword\">\n        {(msg) => <Text type=\"danger\">{msg}</Text>}\n      </ErrorMessage>\n    </div>\n  </>\n);\n\nexport default FieldPassword;\n","import React from 'react';\nimport { ErrorMessage } from 'formik';\nimport { Typography } from 'antd';\nimport { Checkbox } from 'formik-antd';\nimport className from 'classnames/bind';\nimport styles from './Form.module.css';\n\nconst cx = className.bind(styles);\nconst { Text } = Typography;\n\nconst FieldAccept = () => (\n  <div className={cx('fieldColumn', 'acceptWrap')}>\n    <div>\n      <Text>AcceptTerms: </Text>\n      <Checkbox name=\"acceptTerms\" type=\"checkbox\" />\n    </div>\n    <ErrorMessage name=\"acceptTerms\" component=\"div\">\n      {(msg) => <Text type=\"danger\">{msg}</Text>}\n    </ErrorMessage>\n  </div>\n);\n\nexport default FieldAccept;\n","import React from 'react';\nimport { ErrorMessage } from 'formik';\nimport { Typography } from 'antd';\nimport { InputNumber } from 'formik-antd';\nimport styles from './Form.module.css';\n\nconst { Text } = Typography;\n\nconst FieldAge = () => (\n  <div className={styles.fieldColumn}>\n    <Text>Age: </Text>\n    <InputNumber\n      name=\"age\"\n      type=\"text\"\n      placeholder=\"Enter age...\"\n      style={{ width: '100%' }}\n    />\n    <ErrorMessage name=\"age\">\n      {(msg) => <Text type=\"danger\">{msg}</Text>}\n    </ErrorMessage>\n  </div>\n);\n\nexport default FieldAge;\n","import React from 'react';\nimport { ErrorMessage } from 'formik';\nimport { Typography } from 'antd';\nimport { Input } from 'formik-antd';\nimport styles from './Form.module.css';\n\nconst { Text } = Typography;\n\nconst FieldEmail = () => (\n  <div className={styles.item}>\n    <Text>Email: </Text>\n    <Input name=\"email\" type=\"email\" placeholder=\"Enter email...\" />\n    <ErrorMessage name=\"email\">\n      {(msg) => <Text type=\"danger\">{msg}</Text>}\n    </ErrorMessage>\n  </div>\n);\n\nexport default FieldEmail;\n","import React from 'react';\nimport { ErrorMessage } from 'formik';\nimport { Typography } from 'antd';\nimport { Input } from 'formik-antd';\nimport styles from './Form.module.css';\n\nconst { Text } = Typography;\n\nconst FieldWebsite = () => (\n  <div className={styles.item}>\n    <Text>Website: </Text>\n    <Input name=\"website\" type=\"text\" placeholder=\"Enter website...\" />\n    <ErrorMessage name=\"website\" />\n  </div>\n);\n\nexport default FieldWebsite;\n","import React from 'react';\n\nimport {\n  getIn, Field, ErrorMessage, FieldArray,\n} from 'formik';\nimport { Input } from 'formik-antd';\nimport { Button, Typography } from 'antd';\nimport styles from './Form.module.css';\n\n\nconst { Text } = Typography;\nlet count = 0;\n\nconst FieldArrayComponent = (arrayHelpers) => (\n  <div>\n    {arrayHelpers.form.values.skills.map((objSkill, index) => {\n      count += 1;\n      const handleAdd = () => {\n        arrayHelpers.push('');\n      };\n      return (\n        <div key={count} className={styles.fieldRow}>\n          <Field name={`skills.${index}`}>\n            {({ field, form: { touched, errors } }) => {\n              const error = getIn(errors, field.name);\n              const touch = getIn(touched, field.name);\n              return (\n                <div className={styles.skiilsWrap}>\n                  <Input\n                    type=\"text\"\n                    name={field.name}\n                    onChange={field.onChange}\n                    placeholder=\"Enter skill...\"\n                    style={{ height: '35px' }}\n                  />\n                  {touch && error ? <p>{error}</p> : null}\n                </div>\n              );\n            }}\n          </Field>\n          <ErrorMessage name={`skills.${index}`} />\n          <Button\n            type=\"primary\"\n            style={{ height: '35px' }}\n            onClick={() => handleAdd()}\n          >\n            +\n          </Button>\n        </div>\n      );\n    })}\n  </div>\n);\n\nconst FieldSkills = () => (\n  <div className={styles.item}>\n    <Text>Skills: </Text>\n    <FieldArray name=\"skills\" component={FieldArrayComponent} />\n  </div>\n);\n\nexport default FieldSkills;\n","import _ from 'lodash';\r\n\r\n//фильтруем values.skills на пустые поля\r\nconst filtredEmptySkiils = (values) => {\r\n  const filtredSkiils = values.skills.filter(\r\n    (skill) => skill !== undefined && skill !== ''\r\n  );\r\n\r\n  let filtredValues = {\r\n    ...values,\r\n    skills: filtredSkiils,\r\n  };\r\n  return filtredValues;\r\n};\r\n//фильтруем values на пустые поля\r\nexport const filtredEmptyFields = (values) => {\r\n  const filtredSkiils = filtredEmptySkiils(values);\r\n  const filtredFields = _.omitBy(filtredSkiils, (k, v) => k === '');\r\n  return filtredFields;\r\n};\r\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { Typography } from 'antd';\nimport { Form } from 'formik-antd';\nimport axios from 'axios';\nimport styles from './form/Form.module.css';\n\nimport { schemaValidate } from './form/shema';\nimport FieldName from './form/FieldName';\nimport FieldPassword from './form/FieldPassword';\nimport FieldAccept from './form/FieldAccept';\nimport FieldAge from './form/FieldAge';\nimport FieldEmail from './form/FieldEmail';\nimport FieldWebsite from './form/FieldWebsite';\nimport FieldSkills from './form/FieldSkills';\nimport { filtredEmptyFields } from '../utils/filtrerValues';\n\nconst { Title } = Typography;\n\nconst FormAuth = () => {\n  const URL = 'http://localhost:9000/sign-up';\n\n  const initialValues = {\n    name: '',\n    password: '',\n    confirmPassword: '',\n    email: '',\n    website: '',\n    age: '',\n    skills: [''],\n    acceptTerms: false,\n  };\n\n  const handleSubmit = async (values, { setFieldError, setSubmitting }) => {\n    const filtred = filtredEmptyFields(values);\n    try {\n      const response = await axios.post(URL, filtred);\n      if (response.status === 200) {\n        alert(response.data.message);\n      }\n    } catch (err) {\n      setFieldError('email', 'Пользователь с таким email уже зарегистрирован');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schemaValidate}\n      onSubmit={handleSubmit}\n    >\n      {() => (\n        <Form>\n          <div className={styles.formWrap}>\n            <div className={styles.form}>\n              <Title level={3}>Регистрация:</Title>\n              <hr />\n              <FieldName />\n              <FieldPassword />\n              <FieldEmail />\n              <FieldWebsite error />\n              <FieldAge />\n              <FieldSkills />\n              <FieldAccept />\n              <hr />\n              <button type=\"submit\" style={{ width: '100%' }}>\n                Submit\n              </button>\n            </div>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default FormAuth;\n","import React from 'react';\nimport FormAuth from './components/FormAuth';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <FormAuth />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrap\":\"Form_formWrap__1cJUI\",\"form\":\"Form_form__2cO4C\",\"item\":\"Form_item__QJkWn\",\"fieldRow\":\"Form_fieldRow__6oMQI\",\"fieldColumn\":\"Form_fieldColumn__2ydAb\",\"skiilsWrap\":\"Form_skiilsWrap__HEspn\",\"skiilsRow\":\"Form_skiilsRow__Hs3An\",\"acceptWrap\":\"Form_acceptWrap__2-AMP\"};"],"sourceRoot":""}